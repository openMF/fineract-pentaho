plugins {
	id 'java-library'
	id 'java-library-distribution'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    jcenter()

    maven { url 'https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/'  }
    maven { url 'https://repo.orl.eng.hitachivantara.com/artifactory/pnt-mvn/'  }
    
    // maven { url 'https://nexus.pentaho.org/content/groups/omni/' }
    // https://github.com/pentaho/mondrian/issues/1054
    // https://jira.pentaho.com/browse/PDI-18983
}

project.ext.pentahoVersion = '7.0.0.6-95'
apply plugin: 'war'

dependencyManagement {
    dependencies {
        dependency 'org.openjdk.nashorn:nashorn-core:15.1'
        dependency 'org.codehaus.groovy:groovy-all:3.0.8'
        dependencySet(group: 'pentaho-reporting-engine', version: pentahoVersion) {
            entry 'pentaho-reporting-engine-classic-core'
            entry 'pentaho-reporting-engine-classic-extensions'
            entry 'pentaho-reporting-engine-classic-extensions-scripting'
            entry 'pentaho-reporting-engine-wizard-core'
        }
/*
        dependencySet(group: 'pentaho-report-designer', version: '3.9.1-GA') {
            entry 'pentaho-reporting-engine-wizard-xul'
        }
*/
        dependencySet(group: 'pentaho-library', version: pentahoVersion) {
            entry 'libbase'
            entry 'libdocbundle'
            entry 'libfonts'
            entry 'libformat'
            entry 'libformula'
            entry 'libloader'
            entry 'librepository'
            entry 'libserializer'
            entry 'libsparkline'
            entry 'libxml'
        }
    }
}

dependencies {
    compileOnly(
        // Fineract!
        files("../fineract/fineract-provider/build/classes/java/main/"),

        // Fineract dependencies (TODO version should *NOT* be specified here...)
        'org.slf4j:slf4j-api:1.7.30',
        'org.apache.openjpa:openjpa:3.1.2',
        'org.apache.commons:commons-lang3:3.10',
        'org.springframework:spring-context:5.2.6.RELEASE',
        'org.springframework.security:spring-security-core:5.3.4.RELEASE',
        'org.springframework.data:spring-data-commons:2.3.4.RELEASE',
        'javax.ws.rs:jsr311-api:1.1.1',
    )

    implementation(
        // Pentaho..
        'pentaho-reporting-engine:pentaho-reporting-engine-classic-core',
        'pentaho-reporting-engine:pentaho-reporting-engine-classic-extensions',
        'pentaho-reporting-engine:pentaho-reporting-engine-classic-extensions-scripting',
        'pentaho-reporting-engine:pentaho-reporting-engine-wizard-core',
        // N/A: 'pentaho-report-designer:pentaho-reporting-engine-wizard-xul',

        'pentaho-library:libbase',
        'pentaho-library:libdocbundle',
        'pentaho-library:libfonts',
        'pentaho-library:libformat',
        'pentaho-library:libformula',
        'pentaho-library:libloader',
        'pentaho-library:librepository',
        'pentaho-library:libserializer',
        'pentaho-library:libsparkline',
        'pentaho-library:libxml',

        'org.openjdk.nashorn:nashorn-core',
        'org.codehaus.groovy:groovy-all'
    )
    
    testImplementation(
    	'org.junit.jupiter:junit-jupiter-api:5.6.2',
    	'com.google.truth:truth:1.1.2',
		'com.google.truth.extensions:truth-java8-extension:1.1.2',
	)
    
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.30'

	// TODO remove after https://issues.apache.org/jira/browse/FINERACT-1102, when fineract-client is available as an artfefact
    testImplementation(
        files("../fineract/fineract-client/build/classes/java/main/"),
		// copy/paste from fineract/fineract-client/dependencies.gradle and fineract/dependencies.gradle     
	    'com.squareup.retrofit2:retrofit:2.9.0',
	    'com.squareup.retrofit2:adapter-java8:2.9.0',
	    'com.squareup.retrofit2:adapter-rxjava2:2.9.0', // TODO https://github.com/OpenAPITools/openapi-generator/issues/7758
	    'com.squareup.retrofit2:converter-scalars:2.9.0',
	    'com.squareup.retrofit2:converter-gson:2.9.0',
	    'io.gsonfire:gson-fire:1.8.5',
	    'com.squareup.okhttp3:logging-interceptor:4.9.0',
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

distributions {
    main {
        contents {
        	into('/') {
            	from 'README.md', 'LICENSE', 'run*'
            }
            
            into('/pentahoReports') {
            	from { 'pentahoReports' }
            }

            // Add fineract-pentaho.jar into lib/ just so it's easier to install
            // TODO exclude fineract-pentaho.jar at ZIP root (it's currently twice in the dist ZIP, at ./ and lib/) 
            into('/lib') {
                from(jar)
            }

            into('/lib') {
                from(war)
            }
        
            eachFile { FileCopyDetails fcp ->
              fcp.relativePath = new RelativePath(true, fcp.relativePath.pathString.replace('fineract-pentaho/', ''))
            }
        }
    }
}
